const Telegraf = require('telegraf')
const data = require('./data')
const TelegrafInlineMenu = require('telegraf-inline-menu')
const Telegram = require('telegraf/telegram')

const telegram = new Telegram(data.token, {
  agent: null,        // https.Agent instance, allows custom proxy, certificate, keep alive, etc.
  webhookReply: true  // Reply via webhook
})

class CustomContext extends Telegraf.Context {
  constructor (update, telegram, options) {
    console.log('Creating contexy for %j', update)
    super(update, telegram, options)
  }

  reply (...args) {
    console.log('reply called with args: %j', args)
    return super.reply(...args)
  }
}

const bot = new Telegraf(data.token, { contextType: CustomContext })


//===============
// for args parsing
const commandParts = require('./telegrafCommandParts');
bot.use(commandParts());
//===============

const msg = 'On+my+way'
const startLink = 'https://api.telegram.org/bot' + data.token + '/sendMessage?chat_id='
msg_id = 202


//===============
const Extra = require('telegraf/extra')
const Markup = require('telegraf/markup')

const keysLink = Markup.inlineKeyboard([              //—à–∞–±–ª–æ–Ω –∫–Ω–æ–ø–æ–∫
  Markup.urlButton('üíé', 'https://play.google.com/'),
  Markup.callbackButton('btn1', '-'),
  Markup.callbackButton('btn2', '-')
])
//===============

bot.on('photo', (ctx) => ctx.telegram.sendMessage(
  ctx.chat.id, 
  "text response on photo with keysLink", 
  Extra.markup(keysLink)
)) // –ø–µ—Ä–µ–±–∏–≤–∞–µ—Ç –≤—Å—ë, –Ω–æ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ñ–æ—Ç–æ

bot.start((ctx) => {
	ctx.reply(`–ü—Ä–∏–≤–µ—Ç ${ctx.chat.first_name}`)
  //telegram.sendMessage(163700134, ctx.chat)
  console.log(ctx.state.command)
  telegram.sendMessage(438473347,
     `ID: ${ctx.chat.id}\nusr: ${ctx.chat.username}\n${startLink}${ctx.chat.id}&text=${ctx.state.command.args}`)
})

//bot.on('message', (ctx) => ctx.reply('???????')) // –ø–µ—Ä–µ–±–∏–≤–∞–µ—Ç –≤—Å–µ, –≤–∫–ª—é—á–∞—è –∫–æ–º–∞–Ω–¥—ã
//       message = –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —é–∑–µ—Ä–∞

bot.help((ctx) => ctx.telegram.sendMessage(
  ctx.chat.id, 
  "text response with keysLink", 
  Extra.markup(keysLink)
))

bot.command('a', (ctx) => ctx.reply('Command a'))

bot.command('b', ({ reply }) => reply('Command b'))

bot.command('c', Telegraf.reply('Command c'))

// bot.command('send', (ctx))

bot.command('hide', (ctx) => {


  //telegram.editMessageText(data.admins[0], 205, 205, '–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä—ã—Ç–æ.')
  telegram.forwardMessage(438473347, 163700134, ctx.state.command.args) //(to, from, msg_id)
  console.log('fwd') //if —Å–æ–æ–±—â –ø–µ—Ä–µ—Å–ª–∞–ª–æ—Å—å == true –ø–æ–¥–æ–∂–¥–∞—Ç—å –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º delete


 //  console.log('start sleeping')
 //  function sleep(milliseconds) {
 //    const date = Date.now()
 //    let currentDate = null
 //    do {
 //      currentDate = Date.now()
 //    } while (currentDate - date < milliseconds)
 //  }
 //  sleep(10000)
 //  console.log('stop sleeping')
 //  function flush() {
 //    process.stdout.clearLine();
 //    process.stdout.cursorTo(0);
 //  }
	// flush();

  telegram.deleteMessage(163700134, ctx.state.command.args) //(from which chat to delete, msg_id)
  console.log(ctx.state.command.args)
  ctx.reply('–°–æ–æ–±—â–µ–Ω–∏–µ ' + ctx.state.command.args + ' –±—ã–ª–æ —Å–ø—Ä—è—Ç–∞–Ω–æ')
  console.log('text')
})

//==================
const menu = new TelegrafInlineMenu(ctx => `–≠—Ç–æ –∫–ª–∞—Å—Å–Ω–æ–µ –º–µ–Ω—é!`)  // —Å–æ–∑–¥–∞–µ–º —Ç–∏–ø "menu"

menu.setCommand('play')

menu.simpleButton('–õ–æ–≥–∏–Ω', '1', {
  doFunc: ctx => ctx.reply('–í–≤–æ–¥–∏:') // hide(msg_id + 1)
})
menu.simpleButton('–ü–∞—Ä–æ–ª—å', '2', {
  doFunc: ctx => ctx.reply('–í–≤–æ–¥–∏:')
})

bot.use(menu.init())
//==================

bot.startPolling()
//bot.launch() // –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å

//   market://details?id=com.google.android.apps.maps